#!/bin/bash 

source orkhideya-root
ork_include proc
ork_include if
ork_include mac
ork_include qemu
ork_include stdout

if [ -z "$ORK_QEMU_LABEL" ]; then
   export ORK_QEMU_LABEL="$1"
fi

if [ -z "$ORK_QEMU_LABEL" -o "$ORK_QEMU_LABEL" == "-" ]; then
   export ORK_QEMU_LABEL="qemu-machine"
fi

if [ -z "$ORK_QEMU_SYSTEM" ]; then
   stdout_error "No qemu system provided."
   exit 1
fi

if ! which "$ORK_QEMU_SYSTEM" &>/dev/null; then
   stdout_error "qemu system $(stdout_color_wrap main-focused "$ORK_QEMU_SYSTEM") unsupported."
   exit 2
fi

if [ -z "$ORK_QEMU_DISK" -a -n "$ORK_QEMU_IMAGE" ]; then
   ORK_QEMU_DISK="$(qemu_img_file "$ORK_QEMU_IMAGE")"
fi

#ORK_QEMU_ARGS=""$(qemu_arg_default "$ORK_QEMU_ARGS" "device usb-ehci" ",id=usb2")" "$ORK_QEMU_ARGS""
#ORK_QEMU_ARGS=""$(qemu_arg_default "$ORK_QEMU_ARGS" usb)" "$ORK_QEMU_ARGS""
ORK_QEMU_ARGS=""$(qemu_arg_default "$ORK_QEMU_ARGS" soundhw hda)" "$ORK_QEMU_ARGS""
ORK_QEMU_ARGS=""$(qemu_arg_default "$ORK_QEMU_ARGS" name qemuvm)" "$ORK_QEMU_ARGS""
ORK_QEMU_ARGS=""$(qemu_arg_default "$ORK_QEMU_ARGS" vga std)" "$ORK_QEMU_ARGS""

if [ -n "$ORK_QEMU_DISK" ]; then
   ORK_QEMU_ARGS=""$(qemu_arg_default "$ORK_QEMU_ARGS" hda "$ORK_QEMU_DISK")" "$ORK_QEMU_ARGS""
fi

ORK_QEMU_ARGS=""$(qemu_arg_default "$ORK_QEMU_ARGS" enable-kvm)" "$ORK_QEMU_ARGS""

if ! qemu_arg_exists "$ORK_QEMU_ARGS" monitor; then
   stdout_normal "No monitor provided. Looking for port to host it on."

   for _port in $(seq 4000 5000); do 
      if [ -z "$(lsof -n -i :$_port | grep -o '\(LISTEN\)')" ]; then break; fi
   done

   stdout_normal "Machine monitor will be hosted on port $(stdout_color_wrap main-focused "$_port")."

   ORK_QEMU_ARGS=""$ORK_QEMU_ARGS" -monitor tcp:$ORK_QEMU_VM_HOST:$_port,server,nowait"
fi

if ! qemu_arg_exists "$ORK_QEMU_ARGS" vnc; then
   stdout_normal "No VNC provided. Looking for port to host it on."

   for _port in $(seq 0 99); do 
      _real_port="59$(printf '%02d' $_port)"
      if [ -z "$(lsof -n -i :$_real_port | grep -o '\(LISTEN\)')" ]; then break; fi
   done

   stdout_normal "VNC will be hosted on port $(stdout_color_wrap main-focused "$ORK_QEMU_VM_HOST:$_real_port")."
   ORK_QEMU_ARGS=""$ORK_QEMU_ARGS" -vnc $ORK_QEMU_VM_HOST:$_port"
fi

stdout_warning "Launching new qemu machine."
stdlib_trap proc_label_spawn "$ORK_QEMU_LABEL" $ORK_QEMU_SYSTEM $ORK_QEMU_ARGS

echo "$ORK_QEMU_IMAGE" > "$(proc_label_path "$ORK_QEMU_LABEL")/image"
_tap_device="$(echo "$ORK_QEMU_ARGS" | egrep -o -- "-net tap,[^ ]+" | egrep -o 'ifname=[^ ,]+' | awk -F '=' '{ print $2 }')"

if [ -n "$_tap_device" ]; then
   echo "$_tap_device" > "$(proc_label_path "$ORK_QEMU_LABEL")/tap"
fi

if [ -n "$ORK_QEMU_ROUTER" ]; then
   echo "$ORK_QEMU_ROUTER" > "$(proc_label_path "$ORK_QEMU_LABEL")/router"
fi

stdout_normal "qemu machine launched as $(stdout_color_wrap main-focused "$ORK_QEMU_LABEL")."
exit 0
